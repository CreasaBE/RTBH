# Bird RTBH Configuration
#
# Example
#       ip route add blackhole 192.0.2.44/32 table 10
#

log "/var/log/bird-rtbh.log" all;
log syslog { debug, trace, info, remote, warning, error, auth, fatal, bug };

define ownasn = 64646;
define loopbackaddress = 192.0.2.99;

router id 192.0.2.99;

debug protocols all;

function avoid_martians()
prefix set martians;
{
        martians = [ 169.254.0.0/16+, 172.16.0.0/12+, 192.168.0.0/16+, 10.0.0.0/8+, 224.0.0.0/4+, 240.0.0.0/4+, 0.0.0.0/32-, 0.0.0.0/0{25,32}, 0.0.0.0/0{0,7} ];

        ### Avoid RFC1918 and similar networks
        if net ~ martians then return false;
        return true;
}

protocol direct {
        interface "-*";
}

protocol device {
        scan time 10;           # Scan interfaces every 10 seconds
}

protocol static default_sink {
  # sink all local prefixes by default, to avoid loops
  # (low localpref, let other routes override us)
  import filter { preference = 1; accept; };

  route 192.0.2.0/24 blackhole;
}

protocol kernel {               # Primary routing table
        learn;                  # Learn alien routes from the kernel
        persist;                # Don't remove routes on bird shutdown
        scan time 10;           # Scan kernel routing table every 10 seconds
        import all;
        export all;
}

# Scans and learns of blackhole routes from table 10, every 10 seconds
table blackholes;
protocol kernel rtbh {
        table blackholes;
        kernel table 10;
        scan time 10;
        learn;
        import all;
        export all;
}

# Merges kernel route table 10 into the kernel's active/master routing table
protocol pipe {
        table master;
        peer table blackholes;
        mode transparent;
        import filter {
                print "Importing blackhole list.";
                accept;
        };
}

filter bgp_in {
        if avoid_martians() then accept;
        else reject;
}

filter bgp_out_upstream {
# Limit to blackholed routes
if (proto = "blackhole" ) then
{
        printn "Checking net/host: ", net;
        # Limit to /32 netmask
        if net.len = 32 then {
                bgp_community.add((64646,666)); # Replace 64646 with your upstream's ASN
                printn "Blackhole net/host: ", net;
                accept  ;
        }
}
else
        if (proto = "rtbh" ) then
        {
                printn "Checking net/host: ", net;
                # Limit to /32 netmask
                if net.len = 32 then {
                        bgp_community.add((64646,666)); # Replace 64646 with your upstream's ASN
                        printn "Blackhole net/host: ", net;
                        accept  ;
                }
        }

if net ~ [192.0.2.0/24] then accept; # Replace 192.0.2.0/24 with your local netblock(s)
        reject;
}

protocol bgp upstream {
        local as ownasn;
        neighbor 192.168.200.2 as 64646;
        export filter bgp_out_upstream;
        import none;
}
